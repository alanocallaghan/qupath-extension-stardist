plugins {
  id 'java-library'
  // To manage included native libraries
  id 'org.bytedeco.gradle-javacpp-platform' version '1.5.8'
}

ext.moduleName = 'qupath.extension.stardist'
ext.qupathVersion = gradle.ext.qupathVersion

description = 'QuPath extension to use StarDist'

version = "0.4.0-SNAPSHOT"

dependencies {
    def qupathVersion = "0.4.0-SNAPSHOT" // For now
    
    implementation "io.github.qupath:qupath-gui-fx:${qupathVersion}"
	implementation libs.bundles.logging    
    
    testImplementation libs.junit
    testRuntimeOnly libs.junit.engine
    
}

processResources {
  from ("${projectDir}/LICENSE.txt") {
    into 'licenses/'
  }
}

tasks.register("copyDependencies", Copy) {
    description "Copy dependencies into the build directory for use elsewhere"
    group "QuPath"
    
    from configurations.default
    into 'build/libs'
}

/*
 * Ensure Java 11 compatibility
 */
java {
    toolchain {
        languageVersion = JavaLanguageVersion.of(11)
    }
    if (project.properties['sources'])
	    withSourcesJar()
    if (project.properties['javadocs'])
	    withJavadocJar()
}

/*
 * Create javadocs for all modules/packages in one place.
 * Use -PstrictJavadoc=true to fail on error with doclint (which is rather strict).
 */
def strictJavadoc = findProperty('strictJavadoc')
if (!strictJavadoc) {
    tasks.withType(Javadoc) {
        options.addStringOption('Xdoclint:none', '-quiet')
    }
}
    
/*
 * Avoid 'Entry .gitkeep is a duplicate but no duplicate handling strategy has been set.'
 * when using withSourcesJar()
 */
tasks.withType(org.gradle.jvm.tasks.Jar) {
    duplicatesStrategy = DuplicatesStrategy.INCLUDE
}

tasks.named('test') {
    useJUnitPlatform()
}
